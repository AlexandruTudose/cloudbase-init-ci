# Argus configuration used in production for testing cloudbaseinit

[argus]

path_to_private_key = key.pem
debug = False
dns_nameservers = 8.8.8.8
resources = https://raw.githubusercontent.com/PCManticore/argus-ci/develop/argus/resources/


[cloudbaseinit]

expected_plugins_count = 13


# Use the following images

[image_windows]

default_ci_username = CiAdmin
default_ci_password = Passw0rd
created_user = Admin
group = Administrators
image_ref = 9d56607b-88f2-405e-838b-6aefc037fb46
flavor_ref = 3
os_type = Windows



# Use the following environment preparers

[devstack_configuration_configdrive_vfat_cdrom]

config_file = /etc/nova/nova.conf
DEFAULT.config_drive_format=vfat
DEFAULT.config_drive_cdrom=true


[devstack_configuration_configdrive_vfat_drive]

config_file = /etc/nova/nova.conf
DEFAULT.config_drive_format=vfat
DEFAULT.config_drive_cdrom=false


[devstack_configuration_configdrive_iso9660_cdrom]

config_file = /etc/nova/nova.conf
DEFAULT.config_drive_format=iso9660
DEFAULT.config_drive_cdrom=true


[devstack_configuration_configdrive_iso9660_drive]

config_file = /etc/nova/nova.conf
DEFAULT.config_drive_format=iso9660
DEFAULT.config_drive_cdrom=false


[environment_devstack_configdrive_vfat_cdrom]

preparer = argus.environment:DevstackEnvironmentPreparer
config = devstack_configuration_configdrive_vfat_cdrom
start_commands = screen -dm -c /home/devstack/devstack/stack-screenrc
stop_commands = killall screen


[environment_devstack_configdrive_vfat_drive]

preparer = argus.environment:DevstackEnvironmentPreparer
config = devstack_configuration_configdrive_vfat_drive
start_commands = screen -dm -c /home/devstack/devstack/stack-screenrc
stop_commands = killall screen


[environment_devstack_configdrive_iso9660_cdrom]

preparer = argus.environment:DevstackEnvironmentPreparer
config = devstack_configuration_configdrive_iso9660_cdrom
start_commands = screen -dm -c /home/devstack/devstack/stack-screenrc
stop_commands = killall screen


[environment_devstack_configdrive_iso9660_drive]

preparer = argus.environment:DevstackEnvironmentPreparer
config = devstack_configuration_configdrive_iso9660_drive
start_commands = screen -dm -c /home/devstack/devstack/stack-screenrc
stop_commands = killall screen


# Use the following scenarios

[base_smoke_windows]

type = smoke
scenario = argus.scenarios.cloud:BaseWindowsScenario
recipe = argus.recipes.cloud.windows:CloudbaseinitRecipe
image = windows
introspection = argus.introspection.cloud.windows:InstanceIntrospection
user_data = 
metadata = {}


[scenario_smoke_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke


[scenario_scripts_smoke_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestScriptsUserdataSmoke
recipe = argus.recipes.cloud.windows:CloudbaseinitScriptRecipe
userdata = argus.windows.multipart_userdata


[scenario_user_already_created_windows : base_smoke_windows]

test_classes = argus.tests.cloud.smoke:CreatedUserTest,
               argus.tests.cloud.smoke:PasswordSmokeTest
recipe = argus.recipes.cloud.windows:CloudbaseinitCreateUserRecipe


[scenario_generic_smoke_windows : base_smoke_windows]

# Generic scenario, which tests some unrelated stuff:
#
# * EC2 userdata
# * admin_password through metadata

test_classes = argus.tests.cloud.windows.test_smoke:TestEC2Userdata,
               argus.tests.cloud.smoke:PasswordSmokeTest
userdata = argus.windows.ec2script
metadata = {"admin_pass": "PASsw0r4&!="}


# VFAT ConfigDrive tests, with drive and cdrom
[scenario_smoke_configdrive_vfat_drive_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke
service_type = configdrive
environment = environment_devstack_configdrive_vfat_drive


[scenario_smoke_configdrive_vfat_cdrom_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke
service_type = configdrive
environment = environment_devstack_configdrive_vfat_cdrom


# ISO9660 ConfigDrive tests, with drive and cdrom

[scenario_smoke_configdrive_iso9660_drive_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke
service_type = configdrive
environment = environment_devstack_configdrive_iso9660_drive


[scenario_smoke_configdrive_iso9660_cdrom_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke
service_type = configdrive
environment = environment_devstack_configdrive_iso9660_cdrom


[scenario_smoke_rescue_windows : base_smoke_windows]

scenario = argus.scenarios.cloud:RescueWindowsScenario
test_classes = argus.tests.cloud.smoke:PasswordRescueSmokeTest
metadata = {"admin_pass": "PASsw0r4&!="}


[scenario_specialize_error_windows : base_smoke_windows]

test_classes = argus.tests.cloud.windows.test_smoke:TestCatchingSpecialize
recipe = argus.recipes.cloud.windows:CloudbaseinitSpecializeRecipe


[scenario_cloudstack_metadata_windows : base_smoke_windows]

# Scenario which mocks the Cloudstack service, testing that
# it works.

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke
recipe = argus.recipes.cloud.windows:CloudbaseinitCloudstackRecipe
scenario = argus.scenarios.cloud:CloudstackWindowsScenario
service_type = cloudstack


[scenario_ec2_metadata_windows : base_smoke_windows]

# Scenario which mocks the EC2 service, testing that
# it works.

test_classes = argus.tests.cloud.windows.test_smoke:TestSmoke
recipe = argus.recipes.cloud.windows:CloudbaseinitEC2Recipe
scenario = argus.scenarios.cloud:EC2WindowsScenario
service_type = ec2
