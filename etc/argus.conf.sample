[argus]
# A private key file, for SSH access to remote host
# (and used for nova boot)
path_to_private_key = <none>

# Activates debugging behaviour.
# When tests fails, a console with pdb will be activated
# instead of failing. sys.exc_info() will be available as 'exc'
debug = False

# A comma separated list of DNS ips, which will be used
# for network connectivity inside the instance.
dns_nameservers = 8.8.8.8


[cloudbaseinit]

# The number of plugins of cloudbaseinit which are expected to run
expected_plugins_count = 13


[image_windows]

# The default username which can connect to the instance.
# It should be created when the image is created.
default_ci_username = CiAdmin

# The password for the default username.
default_ci_password = Passw0rd

# The username which will be created by cloudbaseinit.
created_user = Admin

# The group where the created user can be found
group = Administrators

# The id of the image you want to use for testing.
image_ref = <none>

# The flavor which should be used for the testing.
# Note that there's no check to see that a flavor is enough
# for an image.
flavor_ref = <none>

# The OS type of the image. This should be the result
# of platform.system
os_type = Windows




[scenario_windows]

# This section describes a scenario for testing.
# It is composed of a test class, a recipee, user data, metadata
# and an image section, as well as a scenario class.

# The scenario class which will be used to build a new scenario
# ouf of it. It must be a qualified name, e.g.
# argus.scenario:BaseWindowsScenario
scenario = <none>

# The test classes which will be used for this test. This must be a
# qualified name
# e.g argus.tests.cloud.smoke.test_windows:WindowsSmokeTest
test_classes = <none, none, ...>

# The recipee which will be used to prepare this test's instance
# This must be a qualified name, e.g. argus.recipees.cloud.windows:WindowsCloudbaseinitRecipee
recipee = <none>

# A file location which contains the userdata which will
# be sent into the instance.
# There are some cases which handles this:
# * if it startswith argus., then it is expected to be found in
#   argus.userdata. For instance, argus.windows.multipart_userdata,
#   resolves to argus/windows/multipart_userdata
# * otherwise, the file is considered other location and it will
#   be loaded.
# * if no userdata is wanted, just use 'userdata = '
userdata = <none>

# This is the metadata which will be passed in the instance.
# There are two cases:
# * if it is a file, it is considered to be a JSON file and it will
#   be loaded
# * if it's not a file, then it will be loaded with json.loads.  
metadata = <none>

# The image which will be used for this test.
# This should be the name of another section, which will
# have the format 'image_<this_name>'. If it can't be
# found in the conf, an error will be raised.
image = <none>
